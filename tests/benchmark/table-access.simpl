// Intensively test table lookup access.  

var N = 150000000;

class Zoo {
    Zoo() {
        this.aardvark = 1;
        this.baboon = 1;
        this.cat = 1;
        this.donkey = 1;
        this.elephant = 1;
        this.fox = 1;
    }

    ant() { return this.aardvark; }
    banana() { return this.baboon; }
    tuna() { return this.cat; }
    hay() { return this.donkey; }
    grass() { return this.elephant; }
    mouse() { return this.fox; }
}
var zoo = Zoo();

var sum = 0;
var start = System.clock();

while (sum < N) {
 sum = sum + zoo.ant()
    + zoo.banana()
    + zoo.tuna()
    + zoo.hay()
    + zoo.grass()
    + zoo.mouse();
}

System.log(sum);
System.log(System.clock() - start);


// -------------------------- BENCHMARK ---------------------------
// version                                              alpha-0.0.1
// rounds                                                         3
// min                                                      51.775s
// max                                                      52.155s
// median                                                   52.079s
// avg                                                      52.003s
// stdDeviation                                              0.164s
// -------------------------- BENCHMARK ---------------------------
// version                                              alpha-0.0.2
// rounds                                                         3
// min                                                      55.703s
// max                                                      57.193s
// median                                                   56.766s
// avg                                                      56.554s
// stdDeviation                                              0.626s
// -------------------------- BENCHMARK ---------------------------
// version                 alpha-0.0.3 - add compilation perf flags
// rounds                                                         3
// min                                                      25.998s
// max                                                      27.491s
// median                                                   26.544s
// avg                                                      26.678s
// stdDeviation                                              0.617s
// -------------------------- BENCHMARK ---------------------------
// version                     alpha-0.0.3 - improve for loops perf
// rounds                                                         3
// min                                                      27.562s
// max                                                      28.282s
// median                                                   28.222s
// avg                                                      28.022s
// stdDeviation                                              0.326s